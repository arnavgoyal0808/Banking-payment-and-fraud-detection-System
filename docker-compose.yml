version: '3.8'

services:
  # Databases
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-payment_gateway}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - payment-gateway-network

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "${CLICKHOUSE_HTTP_PORT:-8123}:8123"
      - "${CLICKHOUSE_TCP_PORT:-9000}:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - payment-gateway-network

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - payment-gateway-network
    command: redis-server --requirepass ${REDIS_PASSWORD}

  # Message Queue
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - payment-gateway-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_PORT:-9092}:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - payment-gateway-network

  # Security
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - payment-gateway-network

  vault:
    image: vault:latest
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_ROOT_TOKEN}
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports:
      - "${VAULT_PORT:-8200}:8200"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - payment-gateway-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - payment-gateway-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - payment-gateway-network

  # Services
  api-gateway:
    build: 
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "${API_GATEWAY_PORT:-3000}:3000"
    depends_on:
      - postgres
      - redis
      - keycloak
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-payment_gateway}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      KEYCLOAK_URL: http://keycloak:8080
      JWT_SECRET: ${JWT_SECRET}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - payment-gateway-network

  payment-service:
    build: 
      context: ./services/payment-service
      dockerfile: Dockerfile
    ports:
      - "${PAYMENT_SERVICE_PORT:-3002}:3000"
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-payment_gateway}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      KAFKA_BROKERS: kafka:9092
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - payment-gateway-network

volumes:
  postgres_data:
  clickhouse_data:
  redis_data:
  grafana_data:

networks:
  payment-gateway-network:
    driver: bridge
